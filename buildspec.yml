version: 0.2

phases:
  install:
    runtime-versions:
      docker: latest
    commands:
      - echo [*] Repo: $IMAGE_REPO_NAME:$IMAGE_TAG
      - echo [*] Region: $AWS_DEFAULT_REGION
      - echo [*] Account: $AWS_ACCOUNT_ID
      - echo [*] Date: `date`
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
      - echo Pulling existing Docker image...
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG || true
  build:
    commands:
      - echo [1] Building the project... `date`
      - echo [2] Building the Docker image...
      - docker build --cache-from $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo [-] Docker build completed!
#   post_build:
#     commands:
#       # Name should be the contianer name in Task definition
#       - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > $CONTAINER_NAME.json
#       - cat $CONTAINER_NAME.json
#       - echo Build completed on `date`
#       - echo Pushing the Docker image...
#       - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#       - echo Docker image pushed to repository!
# artifacts:
#   files: $CONTAINER_NAME.json
